{"ast":null,"code":"var _jsxFileName = \"/Users/ruihanjc/Downloads/codetogive/CodeToGive/frontend/src/Text.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [promptArea, styleArea, plotArea, setPromptArea, setStyleArea, setPlotArea] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [promptResponse, setPromptResponse] = useState('');\n  const handleSubmit = async () => {\n    const url = 'http://localhost:4444/api/prompt';\n    var tmpPromptResponse = '';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: promptArea\n          // style: styleArea,\n          // plot: plotArea\n        })\n      });\n\n      // eslint-disable-next-line no-undef\n      let decoder = new TextDecoderStream();\n      if (!response.body) return;\n      const reader = response.body.pipeThrough(decoder).getReader();\n      while (true) {\n        var {\n          value,\n          done\n        } = await reader.read();\n        if (done) {\n          break;\n        } else {\n          tmpPromptResponse += value;\n          setPromptResponse(tmpPromptResponse);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        order: 1,\n        width: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            order: -1\n          },\n          children: \"Hello World!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 10,\n          onChange: e => setPromptArea(e.target.value),\n          style: {\n            order: 2,\n            marginBottom: '1rem'\n          },\n          value: promptArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            order: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPromptArea(''),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            order: 4,\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Streamed Prompt Response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: promptResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uI6U2kUw5wILmFR4GusD0uyNwTY=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from 'react';\n// import \"./Text.css\";\n\n// function Text() {\n//   const [promptArea, styleArea, plotArea, setPromptArea, setStyleArea, setPlotArea] = useState('');\n//   const [answer, setAnswer] = useState('');\n//   const [promptResponse, setPromptResponse] = useState('');\n\n//   const handleSubmit = async () => {\n//     const url = 'http://localhost:4444/api/prompt';\n//     var tmpPromptResponse = '';\n//     try {\n//       const response = await fetch(url , {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           prompt: promptArea,\n//           // style: styleArea,\n//           // plot: plotArea\n//         }),\n//       });\n\n//       // eslint-disable-next-line no-undef\n//       let decoder = new TextDecoderStream();\n//       if (!response.body) return;\n//       const reader = response.body\n//         .pipeThrough(decoder)\n//         .getReader();\n\n//       while (true) {\n//         var {value, done} = await reader.read();\n\n//         if (done) {\n//           break;\n//         } else {\n//           tmpPromptResponse += value;\n//           setPromptResponse(tmpPromptResponse);\n//         }\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n\n//   }\n//   return (\n//     <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n\n//       <div style={{order: 1, width: '80vh'}}>\n//         <div style={{display: 'flex', flexDirection: 'column'}}>\n//           <h2 style={{order: -1}}>Try with your keyboard!</h2> \n//             <textarea                    \n//               rows={1}\n//               onChange={(e) => setPromptArea(e.target.value)}\n//               style={{order: 2, marginBottom: '1rem'}}\n//               value={promptArea}\n//               ></textarea>\n\n//             <h3>Introduce your style</h3>       \n//             <textarea                      \n//               rows={1}\n//               onChange={(e) => setStyleArea(e.target.value)}\n//               style={{order: 2, marginBottom: '1rem'}}\n//               value={styleArea}\n//               ></textarea>\n\n//             <h3>Introduce </h3>       \n//             <textarea                      \n//               rows={1}\n//               onChange={(e) => setPlotArea(e.target.value)}\n//               style={{order: 2, marginBottom: '1rem'}}\n//               value={plotArea}\n//               ></textarea>\n\n//           <div style={{order: 3}}>\n//             <button\n//               onClick={handleSubmit}\n//             >Submit</button>\n//           </div>\n\n//           <div style={{order: 4, marginTop: '1rem'}}>\n//             <h3>Streamed Prompt Response:</h3>\n//             <span>{promptResponse}</span>\n//           </div>\n\n//         </div>      \n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Text;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","promptArea","styleArea","plotArea","setPromptArea","setStyleArea","setPlotArea","answer","setAnswer","promptResponse","setPromptResponse","handleSubmit","url","tmpPromptResponse","response","fetch","method","headers","body","JSON","stringify","prompt","decoder","TextDecoderStream","reader","pipeThrough","getReader","value","done","read","error","console","log","style","display","flexDirection","justifyContent","children","order","width","fileName","_jsxFileName","lineNumber","columnNumber","rows","onChange","e","target","marginBottom","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/ruihanjc/Downloads/codetogive/CodeToGive/frontend/src/Text.js"],"sourcesContent":["import { useState } from 'react';\n\n\nfunction App() {\n  const [promptArea, styleArea, plotArea, setPromptArea, setStyleArea, setPlotArea] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [promptResponse, setPromptResponse] = useState('');\n\n  const handleSubmit = async () => {\n    const url = 'http://localhost:4444/api/prompt';\n    var tmpPromptResponse = '';\n    try {\n      const response = await fetch(url , {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: promptArea,\n          // style: styleArea,\n           // plot: plotArea\n        }),\n      });\n      \n      // eslint-disable-next-line no-undef\n      let decoder = new TextDecoderStream();\n      if (!response.body) return;\n      const reader = response.body\n        .pipeThrough(decoder)\n        .getReader();\n      \n      while (true) {\n        var {value, done} = await reader.read();\n        \n        if (done) {\n          break;\n        } else {\n          tmpPromptResponse += value;\n          setPromptResponse(tmpPromptResponse);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n  return (\n    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n      \n      <div style={{order: 1, width: '80vh'}}>\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n          <h2 style={{order: -1}}>Hello World!</h2>        \n          <textarea                      \n            rows={10}\n            onChange={(e) => setPromptArea(e.target.value)}\n            style={{order: 2, marginBottom: '1rem'}}\n            value={promptArea}\n            ></textarea>\n\n\n          <div style={{order: 3}}>\n            <button\n              onClick={handleSubmit}\n            >Submit</button> <button onClick={() => setPromptArea('')}>Clear</button>\n          </div>\n\n          <div style={{order: 4, marginTop: '1rem'}}>\n            <h3>Streamed Prompt Response:</h3>\n            <span>{promptResponse}</span>\n          </div>\n\n        </div>      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// import React, { useState } from 'react';\n// import \"./Text.css\";\n\n// function Text() {\n//   const [promptArea, styleArea, plotArea, setPromptArea, setStyleArea, setPlotArea] = useState('');\n//   const [answer, setAnswer] = useState('');\n//   const [promptResponse, setPromptResponse] = useState('');\n\n//   const handleSubmit = async () => {\n//     const url = 'http://localhost:4444/api/prompt';\n//     var tmpPromptResponse = '';\n//     try {\n//       const response = await fetch(url , {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           prompt: promptArea,\n//           // style: styleArea,\n//           // plot: plotArea\n//         }),\n//       });\n      \n//       // eslint-disable-next-line no-undef\n//       let decoder = new TextDecoderStream();\n//       if (!response.body) return;\n//       const reader = response.body\n//         .pipeThrough(decoder)\n//         .getReader();\n      \n//       while (true) {\n//         var {value, done} = await reader.read();\n        \n//         if (done) {\n//           break;\n//         } else {\n//           tmpPromptResponse += value;\n//           setPromptResponse(tmpPromptResponse);\n//         }\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n\n//   }\n//   return (\n//     <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n      \n//       <div style={{order: 1, width: '80vh'}}>\n//         <div style={{display: 'flex', flexDirection: 'column'}}>\n//           <h2 style={{order: -1}}>Try with your keyboard!</h2> \n//             <textarea                    \n//               rows={1}\n//               onChange={(e) => setPromptArea(e.target.value)}\n//               style={{order: 2, marginBottom: '1rem'}}\n//               value={promptArea}\n//               ></textarea>\n          \n\n//             <h3>Introduce your style</h3>       \n//             <textarea                      \n//               rows={1}\n//               onChange={(e) => setStyleArea(e.target.value)}\n//               style={{order: 2, marginBottom: '1rem'}}\n//               value={styleArea}\n//               ></textarea>\n\n//             <h3>Introduce </h3>       \n//             <textarea                      \n//               rows={1}\n//               onChange={(e) => setPlotArea(e.target.value)}\n//               style={{order: 2, marginBottom: '1rem'}}\n//               value={plotArea}\n//               ></textarea>\n\n            \n//           <div style={{order: 3}}>\n//             <button\n//               onClick={handleSubmit}\n//             >Submit</button>\n//           </div>\n\n//           <div style={{order: 4, marginTop: '1rem'}}>\n//             <h3>Streamed Prompt Response:</h3>\n//             <span>{promptResponse}</span>\n//           </div>\n\n//         </div>      \n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Text;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}