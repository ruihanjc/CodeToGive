{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruiha\\\\Downloads\\\\CodeToGive\\\\frontend\\\\src\\\\Text.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './Text.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [promptResponse, setPromptResponse] = useState('');\n  const msg = new SpeechSynthesisUtterance();\n  const speechHandler = msg => {\n    msg.text = ourText;\n    window.speechSynthesis.speak(msg);\n  };\n  const handleSubmit = async () => {\n    var characters = document.getElementById(\"textarea1\").value;\n    var style = document.getElementById(\"textarea2\").value;\n    var location = document.getElementById(\"textarea3\").value;\n    const url = 'http://localhost:4444/api/textPrompt';\n    var tmpPromptResponse = '';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: `Create a story of 300 words, with main characters called: ${characters}, style: ${style}, location: ${location}`\n        })\n      });\n\n      // eslint-disable-next-line no-undef\n      let decoder = new TextDecoderStream();\n      if (!response.body) return;\n      const reader = response.body.pipeThrough(decoder).getReader();\n      while (true) {\n        var {\n          value,\n          done\n        } = await reader.read();\n        if (done) {\n          break;\n        } else {\n          tmpPromptResponse += value;\n          setPromptResponse(tmpPromptResponse);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textBody\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"logo-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"voiceHead\",\n            children: \"Type your story!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h\", {\n            children: \"Please fill the details you want for the story\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"textButton\",\n            onClick: handleSubmit,\n            children: \"Here we go!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Protagonists!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"textarea1\",\n            rows: \"2\",\n            cols: \"70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Style!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"textarea2\",\n            rows: \"2\",\n            cols: \"70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Place!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"textarea3\",\n            rows: \"2\",\n            cols: \"70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 0\n          },\n          className: \"text-content-answer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Here's your story:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: promptResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React Text to Speech App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ourText,\n          placeholder: \"Enter Text\",\n          onChange: e => setOurText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => speechHandler(msg),\n          children: \"SPEAK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"CXNkG6NqCZpw/pBUTuRkBuvYQNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","promptResponse","setPromptResponse","msg","SpeechSynthesisUtterance","speechHandler","text","ourText","window","speechSynthesis","speak","handleSubmit","characters","document","getElementById","value","style","location","url","tmpPromptResponse","response","fetch","method","headers","body","JSON","stringify","prompt","decoder","TextDecoderStream","reader","pipeThrough","getReader","done","read","error","console","log","className","children","textAlign","flexDirection","justifyContent","display","class","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","rows","cols","padding","type","placeholder","onChange","e","setOurText","target","_c","$RefreshReg$"],"sources":["C:/Users/ruiha/Downloads/CodeToGive/frontend/src/Text.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './Text.css'; \r\n\r\nfunction App() {\r\n  const [promptResponse, setPromptResponse] = useState('');\r\n\r\n    const msg = new SpeechSynthesisUtterance()\r\n    \r\n\r\n    const speechHandler = (msg) => {\r\n      msg.text = ourText\r\n      window.speechSynthesis.speak(msg)\r\n    }\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    \r\n    var characters = document.getElementById(\"textarea1\").value;\r\n    var style = document.getElementById(\"textarea2\").value;\r\n    var location = document.getElementById(\"textarea3\").value;\r\n\r\n    const url = 'http://localhost:4444/api/textPrompt';\r\n    var tmpPromptResponse = '';\r\n    try {\r\n      const response = await fetch(url , {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          prompt: `Create a story of 300 words, with main characters called: ${characters}, style: ${style}, location: ${location}`,\r\n        }),\r\n      });\r\n      \r\n      // eslint-disable-next-line no-undef\r\n      let decoder = new TextDecoderStream();\r\n      if (!response.body) return;\r\n      const reader = response.body\r\n        .pipeThrough(decoder)\r\n        .getReader();\r\n      \r\n      while (true) {\r\n        var {value, done} = await reader.read();\r\n        \r\n        if (done) {\r\n          break;\r\n        } else {\r\n          tmpPromptResponse += value;\r\n          setPromptResponse(tmpPromptResponse);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n  return (\r\n        <div className= \"textBody\">\r\n            <div style={{ textAlign: 'center' , flexDirection: 'column', justifyContent: 'center'}}>\r\n\r\n            \r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n            \r\n            <div class=\"logo-wrapper\">\r\n                <header className=\"voiceHead\">Type your story!</header>   \r\n                <h>Please fill the details you want for the story</h>\r\n            </div>\r\n                <h3></h3>\r\n                <h3></h3>\r\n              <div  className=\"container\">\r\n                <button className=\"textButton\"\r\n                  onClick={handleSubmit}\r\n                >Here we go!</button>\r\n              </div>  \r\n\r\n              <div className=\"container\">\r\n                <h3>Protagonists!</h3>\r\n                <textarea id=\"textarea1\" rows=\"2\" cols=\"70\"></textarea>\r\n     \r\n              \r\n                <h3>Style!</h3>\r\n                <textarea id=\"textarea2\" rows=\"2\" cols=\"70\"></textarea>            \r\n        \r\n         \r\n                <h3>Place!</h3>\r\n                <textarea id=\"textarea3\" rows=\"2\" cols=\"70\"></textarea>\r\n              </div>\r\n              \r\n\r\n\r\n\r\n\r\n          <div style={{padding: 0}} className=\"text-content-answer\">\r\n            <h3>Here's your story:</h3>\r\n            <span>{promptResponse}</span>\r\n          </div>\r\n\r\n\r\n          <h1>React Text to Speech App</h1>\r\n      <input\r\n        type='text'\r\n        value={ourText}\r\n        placeholder='Enter Text'\r\n        onChange={(e) => setOurText(e.target.value)}\r\n      />\r\n      <button onClick={() => speechHandler(msg)}>SPEAK</button>\r\n          \r\n\r\n        </div>      \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}